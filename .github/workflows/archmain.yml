name: Build Arch Linux GUI Installer ISO

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Pacman and Install Dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed git base-devel archiso wget

      - name: Configure Git
        run: |
          git config --global user.name "KrzysTheTech"
          git config --global user.email "krzysztofdemirkuzniak@gmail.com"

      - name: Create archiso Profile
        run: |
          cp -r /usr/share/archiso/configs/releng/ archlive

      - name: Configure ISO Profile and Compression
        run: |
          cat <<EOF > archlive/profile.conf
          iso_name="archlinux-gui-installer"
          iso_label="ARCH_GUI_$(date +%Y%m)"
          iso_publisher="KrzysTheTech <krzysztofdemirkuzniak@gmail.com>"
          iso_application="Arch Linux GUI Installer"
          iso_version="$(date +%Y.%m.%d)"
          install_dir="arch"
          buildmodes=('iso')
          bootmodes=('bios.syslinux.mbr' 'bios.syslinux.eltorito'
                     'uefi-shell' 'uefi-ia32.grub.esp' 'uefi-x64.grub.esp'
                     'uefi-ia32.refind.esp' 'uefi-x64.refind.esp')
          airootfs_image_tool_options=('-comp' 'xz' '-b' '1M')
          file_permissions=(
            ["/etc/shadow"]="0:0:400"
            ["/root"]="0:0:750"
            ["/root/.automated_script.sh"]="0:0:755"
            ["/usr/local/bin/choose-mirror"]="0:0:755"
            ["/usr/local/bin/Installation_guide"]="0:0:755"
            ["/usr/local/bin/livecd-sound"]="0:0:755"
          )
          EOF

      - name: Configure Pacman for Testing Repos
        run: |
          cat <<EOF > archlive/pacman.conf
          [options]
          Architecture = auto
          CheckSpace
          SigLevel = Never
          ParallelDownloads = 10

          [core-testing]
          Include = /etc/pacman.d/mirrorlist
          [core]
          Include = /etc/pacman.d/mirrorlist
          [extra-testing]
          Include = /etc/pacman.d/mirrorlist
          [extra]
          Include = /etc/pacman.d/mirrorlist
          [kde-unstable]
          Include = /etc/pacman.d/mirrorlist
          [gnome-unstable]
          Include = /etc/pacman.d/mirrorlist
          [multilib-testing]
          Include = /etc/pacman.d/mirrorlist
          [multilib]
          Include = /etc/pacman.d/mirrorlist
          [testing]
          Include = /etc/pacman.d/mirrorlist
          EOF

      - name: Define Extensive Package List (500+ packages)
        run: |
          cat <<EOF > archlive/packages.x86_64
          # --- BASE SYSTEM & BOOTLOADER ---
          base base-devel linux linux-firmware refind
          
          # --- INSTALLER & LIVE ENVIRONMENT ---
          archiso calamares fastfetch htop wget curl unzip p7zip networkmanager
          xorg-server xorg-xinit openbox tint2
          
          # --- DESKTOP ENVIRONMENTS ---
          plasma-meta kde-applications-meta
          gnome gnome-extra
          xfce4 xfce4-goodies
          cinnamon
          mate mate-extra
          budgie-desktop budgie-extras
          deepin deepin-extra
          
          # --- WINDOW MANAGERS & WAYLAND ---
          i3-wm i3status dmenu
          awesome
          qtile
          bspwm sxhkd
          sway waybar wofi
          hyprland xdg-desktop-portal-hyprland
          wayfire
          dynamic-window-manager
          
          # --- WEB BROWSERS & NETWORKING ---
          firefox chromium brave-browser
          thunderbird
          filezilla
          
          # --- OFFICE & PRODUCTIVITY ---
          libreoffice-fresh
          onlyoffice-desktopeditors
          gimp inkscape scribus
          zotero
          
          # --- DEVELOPMENT ---
          git gcc gdb make cmake
          python python-pip python-virtualenv
          nodejs npm
          go rust
          neovim code
          qtcreator
          docker docker-compose
          podman
          
          # --- VIRTUALIZATION ---
          qemu-full virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat
          virtualbox virtualbox-guest-iso
          
          # --- MULTIMEDIA & GRAPHICS ---
          vlc mpv
          ffmpeg
          kdenlive shotcut openshot
          blender
          obs-studio
          audacity lmms
          krita mypaint
          darktable rawtherapee
          shotwell gwenview
          spotify-launcher
          
          # --- GAMING ---
          steam lutris wine gamemode
          # Strategy & Simulation
          0ad the-battle-for-wesnoth freeciv flightgear openttd endless-sky
          # Action & Arcade
          xonotic assaultcube sauerbraten teeworlds supertuxkart hedgewars extremetuxracer
          # Puzzle & Platformer
          supertux pingus frozen-bubble neverball
          # RPG
          minetest flare-engine valyria-tear
          
          # --- UTILITIES ---
          gparted bleachbit timeshift
          stacer
          veracrypt
          keepassxc
          qbittorrent
          conky
          
          # --- FONTS ---
          noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-dejavu ttf-liberation
          EOF

      - name: Build and Install AUR Helper (yay) into Live Environment
        run: |
          git clone https://aur.archlinux.org/yay.git
          cd yay
          chown -R nobody:nobody .
          sudo -u nobody makepkg -s --noconfirm
          pacman -U --root ../archlive/airootfs --dbpath ../archlive/airootfs/var/lib/pacman -noconfirm *.pkg.tar.zst
          cd ..
          rm -rf yay

      - name: Configure Calamares for DE Selection
        run: |
          mkdir -p archlive/airootfs/etc/calamares/modules
          mkdir -p archlive/airootfs/etc/calamares/branding/archlinux
          mkdir -p archlive/airootfs/etc/calamares/scripts

          # Main Calamares settings - added 'packages' module
          cat <<EOF > archlive/airootfs/etc/calamares/settings.conf
          modules-load:
            - welcome
            - keyboard
            - partition
            - packages
            - users
            - summary
            - finished
          
          branding: archlinux
          prompt-install: false
          -id: preserve-user-home-on-reinstall
          EOF
          
          # Calamares branding
          cat <<EOF > archlive/airootfs/etc/calamares/branding/archlinux/branding.desc
          componentName: archlinux
          welcomeStyle: "true"
          welcomeText: |
            <h2>Welcome to the Arch Linux GUI installer.</h2>
            <p>This installer will guide you through installing Arch Linux.</p>
            <p><b>WARNING:</b> This build uses testing repositories and is intended for experienced users who are comfortable with potential system instability.</p>
          productName: Arch Linux
          productVersion: Rolling
          productUrl: "https://archlinux.org"
          shortName: Arch Linux
          productLogo: "/usr/share/pixmaps/archlinux-logo.svg"
          EOF

          # Packages module for DE/WM selection
          cat <<EOF > archlive/airootfs/etc/calamares/modules/packages.conf
          ---
          backend: "pacman"
          operations:
            - try_install
          
          groups:
            - name: "Desktop Environments"
              description: "Select one or more full-featured desktop environments."
              exclusive: false
              packages:
                - "KDE Plasma": plasma-meta
                - "GNOME": gnome
                - "XFCE": xfce4
                - "Cinnamon": cinnamon
                - "MATE": mate
                - "Budgie": budgie-desktop
                - "Deepin": deepin
          
            - name: "Window Managers"
              description: "Select one or more lightweight window managers."
              exclusive: false
              packages:
                - "i3": i3-wm
                - "Sway (Wayland)": sway
                - "Hyprland (Wayland)": hyprland
                - "Awesome": awesome
                - "BSPWM": bspwm
                - "Qtile": qtile
          EOF
          
          # Partition module configuration
          cat <<EOF > archlive/airootfs/etc/calamares/modules/partition.conf
          ---
          efiSystemPartition: "/boot"
          efiSystemPartitionSize: 512M
          create-swap: true
          swap-size: 2048M
          default-filesystem: "ext4"
          EOF

      - name: Configure Calamares Autostart
        run: |
          # 1. Configure agetty for autologin
          mkdir -p archlive/airootfs/etc/systemd/system/getty@tty1.service.d/
          cat <<EOF > archlive/airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf
          [Service]
          ExecStart=
          ExecStart=-/usr/bin/agetty --autologin root --noclear %I \$TERM
          EOF

          # 2. Create .xinitrc to start Openbox and Calamares
          cat <<EOF > archlive/airootfs/root/.xinitrc
          #!/bin/sh
          # Start a minimal window manager and a panel
          openbox &
          tint2 &
          # Launch the installer fullscreen
          calamares --fullscreen
          EOF
          chmod +x archlive/airootfs/root/.xinitrc

          # 3. Use .bash_profile to trigger startx on login
          cat <<EOF > archlive/airootfs/root/.bash_profile
          [[ -z \$DISPLAY && \$XDG_VTNR -eq 1 ]] && startx
          EOF

      - name: Configure Post-Installation
        run: |
          cat <<EOF > archlive/airootfs/usr/local/bin/install-refind
          #!/bin/bash
          refind-install
          EOF
          chmod +x archlive/airootfs/usr/local/bin/install-refind

          cat <<EOF > archlive/airootfs/etc/calamares/scripts/post-install
          #!/bin/bash
          /usr/local/bin/install-refind
          EOF
          chmod +x archlive/airootfs/etc/calamares/scripts/post-install
          
          cat <<EOF > archlive/airootfs/etc/calamares/modules/finished.conf
          ---
          reboot-now: true
          post-install:
              - command: "/etc/calamares/scripts/post-install"
          EOF

      - name: Build the ISO
        id: build_iso
        run: |
          ISO_DATE=$(date +%Y.%m.%d)
          echo "TIMESTAMP=${ISO_DATE}" >> $GITHUB_ENV
          
          mkdir work out
          chown -R nobody:nobody work out
          
          # This build will take a very long time and produce a large ISO file.
          sudo -u nobody mkarchiso -v -w work -o out archlive

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-gui-calamers-installer-netinstall-${{ env.TIMESTAMP }}-x86_64.iso
          path: out/*.iso
          
