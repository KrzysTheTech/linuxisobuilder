# GitHub Actions Workflow: Build and Package
# This workflow compiles the C++ application and packages it for multiple formats.

name: Build and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential dpkg-dev rpm zstd

      - name: Compile C++ application
        run: sudo make

      # --- Package Creation ---

      - name: Package as tar.xz
        run: tar -cJf linuxisobuilder.tar.xz build-iso README.md

      - name: Build Debian package (.deb)
        run: |
          mkdir -p debian/DEBIAN
          mkdir -p debian/usr/local/bin
          cp build-iso debian/usr/local/bin/
          echo "Package: linuxisobuilder" > debian/DEBIAN/control
          echo "Version: 0.0.3" >> debian/DEBIAN/control
          echo "Architecture: amd64" >> debian/DEBIAN/control
          echo "Maintainer: KrzysTheTech" >> debian/DEBIAN/control
          echo "Description: A tool to create custom Linux ISOs." >> debian/DEBIAN/control
          sudo dpkg-deb --build debian linuxisobuilder.deb

      - name: Build RPM package (.rpm)
        run: |
          # Set up RPM build environment
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp build-iso ~/rpmbuild/SOURCES/
          
          # Create SPEC file
          cat << EOF > ~/rpmbuild/SPECS/linuxisobuilder.spec
          Name:       linuxisobuilder
          Version:    0.0.3
          Release:    1
          Summary:    A tool to create custom Linux ISOs.
          BuildArch:  x86_64

          %description
          A command-line tool to simplify the creation of custom Linux ISOs.

          %install
          mkdir -p %{buildroot}/usr/local/bin
          install -m 755 %{_sourcedir}/build-iso %{buildroot}/usr/local/bin/build-iso

          %files
          /usr/local/bin/build-iso
          EOF

          # Build the RPM
          rpmbuild -bb ~/rpmbuild/SPECS/linuxisobuilder.spec

      - name: Build Arch Linux package (.pkg.zst)
        run: |
          # Create package structure
          mkdir -p pkg/usr/local/bin
          cp build-iso pkg/usr/local/bin/
          
          # Create .PKGINFO
          cat << EOF > pkg/.PKGINFO
          pkgname = linuxisobuilder
          pkgver = 0.0.3
          pkgdesc = A tool to create custom Linux ISOs.
          arch = x86_64
          EOF

          # Create the final package
          cd pkg
          tar -I "zstd -c -T0" -cf ../linuxisobuilder.pkg.zst .

      # --- Artifact Uploads ---

      - name: Upload tar.xz artifact
        uses: actions/upload-artifact@v4
        with:
          name: archive
          path: linuxisobuilder.tar.xz

      - name: Upload .deb package artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: linuxisobuilder.deb

      - name: Upload .rpm package artifact
        uses: actions/upload-artifact@v4
        with:
          name: RPM
          path: ~/rpmbuild/RPMS/x86_64/*.rpm

      - name: Upload .pkg.zst package artifact
        uses: actions/upload-artifact@v4
        with:
          name: pkg.zst
          path: linuxisobuilder.pkg.zst
