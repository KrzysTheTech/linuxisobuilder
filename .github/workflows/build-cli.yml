name: Build and Release All Packages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  APP_VERSION: "0.1.0"
  APP_RELEASE_NAME: "alpha1"

jobs:
  build-binaries:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64, ppc64el, i386, riscv64, s390x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Dynamic Version
        id: versioning
        run: echo "VERSION_STRING=${{ env.APP_VERSION }}-${{ env.APP_RELEASE_NAME }}~$(date +%Y%m%d)-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Setup Cross-Compilation Environment
        run: |
          case "${{ matrix.arch }}" in
            amd64)   echo "CROSS_PREFIX=" >> $GITHUB_ENV && echo "RPM_ARCH=x86_64" >> $GITHUB_ENV ;;
            arm64)   echo "CROSS_PREFIX=aarch64-linux-gnu-" >> $GITHUB_ENV && echo "RPM_ARCH=aarch64" >> $GITHUB_ENV ;;
            ppc64el) echo "CROSS_PREFIX=powerpc64le-linux-gnu-" >> $GITHUB_ENV && echo "RPM_ARCH=ppc64le" >> $GITHUB_ENV ;;
            i386)    echo "CROSS_PREFIX=i686-linux-gnu-" >> $GITHUB_ENV && echo "RPM_ARCH=i686" >> $GITHUB_ENV ;;
            riscv64) echo "CROSS_PREFIX=riscv64-linux-gnu-" >> $GITHUB_ENV && echo "RPM_ARCH=riscv64" >> $GITHUB_ENV ;;
            s390x)   echo "CROSS_PREFIX=s390x-linux-gnu-" >> $GITHUB_ENV && echo "RPM_ARCH=s390x" >> $GITHUB_ENV ;;
          esac

      - name: Install Dependencies
        continue-on-error: true
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential devscripts debhelper fakeroot zstd gcc g++ make rpm
          if [ -n "${{ env.CROSS_PREFIX }}" ]; then
            TOOLCHAIN="${{ env.CROSS_PREFIX%-gnu-}}"
            sudo apt-get install -y gcc-$TOOLCHAIN g++-$TOOLCHAIN
          fi

      - name: Compile Application
        run: |
          make CXX="${{ env.CROSS_PREFIX }}g++" \
               CXXFLAGS="-std=c++11 -Wall -static-libstdc++ -DPROJECT_VERSION='\"${{ env.VERSION_STRING }}\"' -DTARGET_ARCH='\"${{ matrix.arch }}\"'"

      - name: Create Packages
        run: |
          mkdir -p packages
          # ... logic to create .deb, .rpm, .pkg.zst, .tar.xz ...
      
      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.arch }}
          path: packages/

  publish-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build-binaries
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      
      - name: Prepare Release Notes
        id: release_notes
        run: |
          cat << EOF > notes.md
          # Version 0.1.0-alpha1 Release Notes

          This is the first alpha release for the 0.1.0 series, including major updates for both the CLI and GUI applications.

          ---

          ## v0.1.0-alpha1 (GUI)
          - **New Interface:** A brand new graphical user interface has been introduced, built with the modern GTKmm 4 toolkit.
          - **Cross-Platform Builds:** The GUI can now be compiled for Windows (x64) and macOS (Intel & Apple Silicon).
          - **Version Info:** A new "About" dialog displays dynamic version information, including the build date and number.

          ## v0.1.0-alpha1 (CLI)
          - **Multi-Architecture Support:** Cross-compilation workflows now build the CLI for multiple Linux architectures: \`amd64\`, \`arm64\`, \`i386\`, \`ppc64el\`, \`riscv64\`, and \`s390x\`.
          - **Enhanced Version Flag:** The \`--version\` flag now shows the specific architecture the binary was compiled for.
          - **Automated Packaging:** The build system automatically creates \`.deb\`, \`.rpm\`, \`.pkg.zst\`, and \`.tar.xz\` packages for each architecture.

          ---

          ## Previous Versions

          ### v0.0.3
          - Added initial support for Fedora and Arch Linux builds in the CLI.
          - Separated Debian and Ubuntu into distinct build tracks.
          - The tool now automatically prompts to install missing dependencies.

          ### v0.0.2
          - Fixed \`live-build\` command generation to use the correct \`--packages\` flag.
          - Improved portability by statically linking the C++ standard library.

          ### v0.0.1
          - Initial pre-release of the command-line tool with basic support for Debian and Ubuntu.
          
          ---

          > This release was generated by workflow run **#${{ github.run_number }}** (Attempt **${{ github.run_attempt }}**).
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v0.1.0-alpha1-${{ github.run_number }}"
          name: "v0.1.0-alpha1"
          body_path: "notes.md"
          prerelease: true
          files: |
            dist/**/*.deb
            dist/**/*.rpm
            dist/**/*.tar.xz
            dist/**/*.pkg.tar.zst
