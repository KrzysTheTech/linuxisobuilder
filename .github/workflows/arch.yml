name: Build Full Arch Linux ISO

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Pacman and Install Dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed git base-devel archiso wget go

      - name: Configure Git
        run: |
          git config --global user.name "KrzysTheTech"
          git config --global user.email "krzysztofdemirkuzniak@gmail.com"

      - name: Create archiso Profile
        run: |
          cp -r /usr/share/archiso/configs/releng/ archlive

      - name: Build AUR Helper and Create Local Repo
        run: |
          # Create the repo directory, now named 'yay_repo'
          mkdir -p /yay_repo
          
          # Clone and build yay
          git clone https://aur.archlinux.org/yay.git
          cd yay
          chown -R nobody:nobody .
          sudo -u nobody GOCACHE="$(pwd)/.cache" makepkg -s --noconfirm
          
          # Add the built package to the 'yay' repo database
          repo-add /yay_repo/yay.db.tar.gz *.pkg.tar.zst
          cd ..
          rm -rf yay

      - name: Configure Pacman to use Local Repo
        run: |
          # The custom repository is now named [yay]
          cat <<EOF > archlive/pacman.conf
          [options]
          Architecture = auto
          CheckSpace
          SigLevel = Never
          ParallelDownloads = 10

          [yay]
          SigLevel = Optional TrustAll
          Server = file:///yay_repo

          [core-testing]
          Include = /etc/pacman.d/mirrorlist
          [core]
          Include = /etc/pacman.d/mirrorlist
          [extra-testing]
          Include = /etc/pacman.d/mirrorlist
          [extra]
          Include = /etc/pacman.d/mirrorlist
          [kde-unstable]
          Include = /etc/pacman.d/mirrorlist
          [gnome-unstable]
          Include = /etc/pacman.d/mirrorlist
          [multilib-testing]
          Include = /etc/pacman.d/mirrorlist
          [multilib]
          Include = /etc/pacman.d/mirrorlist
          [testing]
          Include = /etc/pacman.d/mirrorlist
          EOF

      - name: Define Extensive Package List (Full Installation)
        run: |
          cat <<EOF > archlive/packages.x86_64
          # --- BASE SYSTEM & BOOTLOADER ---
          base base-devel linux linux-firmware refind
          # --- AUR HELPER ---
          yay
          # --- INSTALLER & LIVE ENVIRONMENT ---
          archiso calamares fastfetch htop wget curl unzip p7zip networkmanager
          xorg-server xorg-xinit openbox tint2
          # --- DESKTOP ENVIRONMENTS (ALL INCLUDED) ---
          plasma-meta kde-applications-meta
          gnome gnome-extra
          xfce4 xfce4-goodies
          cinnamon
          mate mate-extra
          budgie-desktop budgie-extras
          deepin deepin-extra
          # --- WINDOW MANAGERS & WAYLAND (ALL INCLUDED) ---
          i3-wm i3status dmenu
          awesome
          qtile
          bspwm sxhkd
          sway waybar wofi
          hyprland xdg-desktop-portal-hyprland
          wayfire
          # --- WEB BROWSERS & NETWORKING ---
          firefox chromium brave-browser
          thunderbird
          filezilla
          # --- OFFICE & PRODUCTIVITY ---
          libreoffice-fresh onlyoffice-desktopeditors
          gimp inkscape scribus zotero
          # --- DEVELOPMENT ---
          git gcc gdb make cmake python python-pip nodejs npm go rust neovim code qtcreator docker podman
          # --- VIRTUALIZATION ---
          qemu-full virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat
          virtualbox virtualbox-guest-iso
          # --- MULTIMEDIA & GRAPHICS ---
          vlc mpv ffmpeg kdenlive shotcut openshot blender obs-studio audacity lmms krita mypaint darktable rawtherapee shotwell gwenview spotify-launcher
          # --- GAMING ---
          steam lutris wine gamemode
          0ad the-battle-for-wesnoth freeciv flightgear openttd endless-sky
          xonotic assaultcube sauerbraten teeworlds supertuxkart hedgewars extremetuxracer
          supertux pingus frozen-bubble neverball
          minetest flare-engine valyria-tear
          # --- UTILITIES ---
          gparted bleachbit timeshift stacer veracrypt keepassxc qbittorrent conky
          # --- FONTS ---
          noto-fonts noto-fonts-cjk noto-fonts-emoji ttf-dejavu ttf-liberation
          EOF

      - name: Configure Calamares for Full Installation
        run: |
          mkdir -p archlive/airootfs/etc/calamares/modules
          mkdir -p archlive/airootfs/etc/calamares/branding/archlinux
          mkdir -p archlive/airootfs/etc/calamares/scripts
          cat <<EOF > archlive/airootfs/etc/calamares/settings.conf
          modules-load:
            - welcome
            - keyboard
            - partition
            - unpackfs
            - users
            - summary
            - finished
          branding: archlinux
          prompt-install: false
          -id: preserve-user-home-on-reinstall
          EOF
          cat <<EOF > archlive/airootfs/etc/calamares/branding/archlinux/branding.desc
          componentName: archlinux
          welcomeStyle: "true"
          welcomeText: |
            <h2>Welcome to the Arch Linux Full installer.</h2>
            <p>This installer will copy the complete live environment, including all applications and desktop environments, to your computer.</p>
            <p><b>WARNING:</b> This build uses testing repositories and is intended for experienced users who are comfortable with potential system instability.</p>
          productName: Arch Linux
          productVersion: Rolling (Full)
          productUrl: "https://archlinux.org"
          shortName: Arch Linux
          productLogo: "/usr/share/pixmaps/archlinux-logo.svg"
          EOF
          cat <<EOF > archlive/airootfs/etc/calamares/modules/unpackfs.conf
          ---
          unpack:
              - source: "/run/archiso/bootmnt/arch/x86_64/airootfs.sfs"
                sourcefs: "squashfs"
                destination: ""
          EOF
          cat <<EOF > archlive/airootfs/etc/calamares/modules/partition.conf
          ---
          efiSystemPartition: "/boot"
          efiSystemPartitionSize: 512M
          create-swap: true
          swap-size: 2048M
          default-filesystem: "ext4"
          EOF

      - name: Configure Calamares Autostart
        run: |
          mkdir -p archlive/airootfs/etc/systemd/system/getty@tty1.service.d/
          cat <<EOF > archlive/airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf
          [Service]
          ExecStart=
          ExecStart=-/usr/bin/agetty --autologin root --noclear %I \$TERM
          EOF
          cat <<EOF > archlive/airootfs/root/.xinitrc
          #!/bin/sh
          openbox &
          tint2 &
          calamares --fullscreen
          EOF
          chmod +x archlive/airootfs/root/.xinitrc
          cat <<EOF > archlive/airootfs/root/.bash_profile
          [[ -z \$DISPLAY && \$XDG_VTNR -eq 1 ]] && startx
          EOF

      - name: Configure Post-Installation and Profile
        run: |
          # Post-install script for bootloader
          cat <<EOF > archlive/airootfs/usr/local/bin/install-refind
          #!/bin/bash
          refind-install
          EOF
          chmod +x archlive/airootfs/usr/local/bin/install-refind
          cat <<EOF > archlive/airootfs/etc/calamares/scripts/post-install
          #!/bin/bash
          /usr/local/bin/install-refind
          EOF
          chmod +x archlive/airootfs/etc/calamares/scripts/post-install
          cat <<EOF > archlive/airootfs/etc/calamares/modules/finished.conf
          ---
          reboot-now: true
          post-install:
              - command: "/etc/calamares/scripts/post-install"
          EOF
          # ISO Profile configuration
          cat <<EOF > archlive/profile.conf
          iso_name="archlinux-full"
          iso_label="ARCH_FULL_$(date +%Y%m)"
          iso_publisher="KrzysTheTech <krzysztofdemirkuzniak@gmail.com>"
          iso_application="Arch Linux Full Installer"
          iso_version="$(date +%Y.%m.%d)"
          install_dir="arch"
          buildmodes=('iso')
          bootmodes=('bios.syslinux.mbr' 'bios.syslinux.eltorito'
                     'uefi-shell' 'uefi-ia32.grub.esp' 'uefi-x64.grub.esp'
                     'uefi-ia32.refind.esp' 'uefi-x64.refind.esp')
          airootfs_image_tool_options=('-comp' 'xz' '-b' '1M')
          file_permissions=(
            ["/etc/shadow"]="0:0:400"
            ["/root"]="0:0:750"
          )
          EOF

      - name: Build the ISO
        id: build_iso
        run: |
          ISO_DATE=$(date +%Y.%m.%d)
          echo "TIMESTAMP=${ISO_DATE}" >> $GITHUB_ENV
          mkdir work out
          # CORRECTED: The mkarchiso command is now run as root, as required.
          # The unnecessary 'chown' command has been removed.
          mkarchiso -v -w work -o out archlive

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-full-${{ env.TIMESTAMP }}-x86_64.iso
          path: out/*.iso
