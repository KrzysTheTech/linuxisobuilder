name: Build Arch Linux Netinstall ISO

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update Pacman and Install Dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed git base-devel archiso wget

      - name: Create archiso Profile
        run: |
          cp -r /usr/share/archiso/configs/releng/ archlive

      - name: Define Minimal Package List for Live Environment
        run: |
          cat <<EOF > archlive/packages.x86_64
          # --- BASE SYSTEM ---
          base linux linux-firmware
          # --- BOOTLOADER & BOOT UTILITIES ---
          grub mtools syslinux edk2-shell memtest86+ memtest86+-efi
          # --- INSTALLER & LIVE ENVIRONMENT ---
          archiso calamares networkmanager
          xorg-server xorg-xinit openbox tint2
          # --- UTILITIES ---
          wget git fastfetch
          EOF

      - name: Configure Calamares for Netinstall
        run: |
          mkdir -p archlive/airootfs/etc/calamares/modules
          
          # Calamares settings
          cat <<EOF > archlive/airootfs/etc/calamares/settings.conf
          modules-load:
            - welcome
            - keyboard
            - partition
            - packages
            - users
            - bootloader
            - displaymanager
            - summary
            - finished
          branding: archlinux
          prompt-install: false
          -id: preserve-user-home-on-reinstall
          EOF
          
          # Bootloader module
          cat <<EOF > archlive/airootfs/etc/calamares/modules/bootloader.conf
          ---
          bootloader: "grub"
          efi_directory: "/boot"
          grub_install_args: ["--bootloader-id=arch"]
          EOF

          # UPDATED: Packages module with 50+ groups and 100+ packages
          cat <<EOF > archlive/airootfs/etc/calamares/modules/packages.conf
          ---
          backend: "pacman"
          operations:
            - try_install
          
          groups:
            - name: "üñ•Ô∏è Desktop Environments"
              description: "Full-featured desktop environments."
              packages: ["KDE Plasma": plasma-meta, "GNOME": gnome, "XFCE": xfce4, "Cinnamon": cinnamon, "MATE": mate]
            - name: "ü™ü Window Managers"
              description: "Lightweight and tiling window managers."
              packages: ["i3": i3-wm, "Sway": sway, "Hyprland": hyprland, "bspwm": bspwm, "Awesome": awesome, "Qtile": qtile]
            - name: "üí° Display Managers"
              description: "Graphical login managers."
              packages: ["SDDM (KDE)": sddm, "GDM (GNOME)": gdm, "LightDM (XFCE/etc)": lightdm lightdm-gtk-greeter]
            - name: "üß† Kernels"
              description: "Choose an alternative kernel."
              packages: ["Long-Term Support Kernel": linux-lts, "Zen Kernel": linux-zen]
            - name: "üêö Shells"
              description: "Popular command-line shells."
              packages: ["Zsh": zsh, "Fish": fish]
            - name: "üåê Web Browsers"
              packages: ["Firefox": firefox, "Chromium": chromium, "Brave": brave-browser]
            - name: "üõ†Ô∏è Core Development"
              packages: ["Base Development Tools": base-devel, "Git": git]
            - name: "üë®‚Äçüíª Editors & IDEs"
              packages: ["VS Code": code, "Neovim": neovim, "Kate": kate, "Gedit": gedit]
            - name: "üêç Python Development"
              packages: ["Python & Pip": python python-pip]
            - name: "üï∏Ô∏è Web Development"
              packages: ["Node.js / npm": nodejs npm]
            - name: "‚öôÔ∏è C/C++ Development"
              packages: ["Clang Compiler": clang, "CMake": cmake]
            - name: "üì¶ Containerization"
              packages: ["Docker": docker docker-compose, "Podman": podman]
            - name: "üé® Raster Graphics"
              packages: ["GIMP": gimp, "Krita": krita, "MyPaint": mypaint]
            - name: "‚úíÔ∏è Vector Graphics"
              packages: ["Inkscape": inkscape]
            - name: "üì∏ Photo Management"
              packages: ["darktable": darktable, "rawtherapee": rawtherapee, "Gwenview": gwenview]
            - name: "üßä 3D Graphics"
              packages: ["Blender": blender]
            - name: "üé¨ Video Editing & Playback"
              packages: ["Kdenlive": kdenlive, "OBS Studio": obs-studio, "VLC": vlc, "mpv": mpv]
            - name: "üéµ Audio Production & Playback"
              packages: ["Audacity": audacity, "LMMS": lmms, "Ardour": ardour, "Elisa": elisa]
            - name: "‚úçÔ∏è Office Suites"
              packages: ["LibreOffice": libreoffice-fresh, "OnlyOffice": onlyoffice-desktopeditors]
            - name: "‚úâÔ∏è Email & Communication"
              packages: ["Thunderbird": thunderbird, "Discord": discord, "Telegram": telegram-desktop]
            - name: "üéÆ Gaming Platforms"
              packages: ["Steam": steam, "Lutris": lutris, "Heroic Games Launcher": heroic-games-launcher-bin]
            - name: "üïπÔ∏è Gaming Utilities"
              packages: ["Wine": wine, "Gamemode": gamemode, "MangoHud": mangohud, "Bottles": bottles]
            - name: "üìÇ File Managers"
              packages: ["Dolphin (KDE)": dolphin, "Thunar (XFCE)": thunar, "Nautilus (GNOME)": nautilus, "Ranger (Terminal)": ranger]
            - name: "üíª Terminal Emulators"
              packages: ["Konsole (KDE)": konsole, "GNOME Terminal": gnome-terminal, "Kitty (GPU)": kitty, "Alacritty (GPU)": alacritty]
            - name: "üìà System Monitoring"
              packages: ["htop": htop, "btop": btop, "Conky": conky]
            - name: "üíæ Backup Utilities"
              packages: ["Timeshift": timeshift, "Restic": restic]
            - name: "üîë Security & Privacy"
              packages: ["KeepassXC": keepassxc, "VeraCrypt": veracrypt]
          EOF
          
          # Display Manager module
          cat <<EOF > archlive/airootfs/etc/calamares/modules/displaymanager.conf
          ---
          displaymanagers:
            - name: "SDDM"
              service: "sddm.service"
              package: "sddm"
            - name: "GDM"
              service: "gdm.service"
              package: "gdm"
            - name: "LightDM"
              service: "lightdm.service"
              package: "lightdm"
          default: "sddm"
          EOF

          # Other Calamares configs
          mkdir -p archlive/airootfs/etc/calamares/branding/archlinux
          cat <<EOF > archlive/airootfs/etc/calamares/branding/archlinux/branding.desc
          componentName: archlinux
          welcomeStyle: "true"
          welcomeText: |
            <h2>Welcome to the Arch Linux Netinstaller.</h2>
            <p>An internet connection is required.</p>
          productName: Arch Linux
          productVersion: Rolling (Netinstall)
          EOF
          cat <<EOF > archlive/airootfs/etc/calamares/modules/partition.conf
          ---
          efiSystemPartition: "/boot"
          efiSystemPartitionSize: 512M
          create-swap: true
          swap-size: 2048M
          default-filesystem: "ext4"
          EOF
          cat <<EOF > archlive/airootfs/etc/calamares/modules/finished.conf
          ---
          reboot-now: true
          EOF

      - name: Configure Calamares Autostart and ISO Profile
        run: |
          # Autostart
          mkdir -p archlive/airootfs/etc/systemd/system/getty@tty1.service.d/
          cat <<EOF > archlive/airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf
          [Service]
          ExecStart=
          ExecStart=-/usr/bin/agetty --autologin root --noclear %I \$TERM
          EOF
          cat <<EOF > archlive/airootfs/root/.xinitrc
          #!/bin/sh
          openbox &
          tint2 &
          calamares --fullscreen
          EOF
          chmod +x archlive/airootfs/root/.xinitrc
          cat <<EOF > archlive/airootfs/root/.bash_profile
          [[ -z \$DISPLAY && \$XDG_VTNR -eq 1 ]] && startx
          EOF
          # ISO Profile
          cat <<EOF > archlive/profile.conf
          iso_name="archlinux-netinstall"
          iso_label="ARCH_NET_$(date +%Y%m)"
          iso_publisher="KrzysTheTech"
          iso_application="Arch Linux Netinstaller"
          iso_version="$(date +%Y.%m.%d)"
          install_dir="arch"
          buildmodes=('iso')
          bootmodes=('bios.syslinux.mbr' 'bios.syslinux.eltorito' 'uefi-shell' 'uefi-ia32.grub.esp' 'uefi-x64.grub.esp')
          airootfs_image_tool_options=('-comp' 'xz' '-b' '1M')
          file_permissions=(["/etc/shadow"]="0:0:400" ["/root"]="0:0:750")
          EOF

      - name: Build the ISO
        run: |
          echo "TIMESTAMP=$(date +%Y.%m.%d)" >> $GITHUB_ENV
          mkarchiso -v -w /tmp/work -o /tmp/out archlive

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-netinstall-${{ env.TIMESTAMP }}-grub-x86_64.iso
          path: /tmp/out/*.iso
