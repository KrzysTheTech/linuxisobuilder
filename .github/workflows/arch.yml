name: Build Arch Linux Universal Netinstaller (yay-powered)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create Docker Build Script
        run: |
          cat <<'EOF' > docker-build.sh
          #!/bin/bash
          set -euxo pipefail

          pacman -Syu --noconfirm git base-devel archiso wget

          # Create profile
          cp -r /usr/share/archiso/profiles/releng/ archlive

          # Basic packages
          cat <<EOPKG > archlive/packages.x86_64
          base linux linux-firmware sudo
          grub mtools syslinux edk2-shell
          archiso calamares networkmanager
          xorg-server xorg-xinit openbox tint2
          wget git fastfetch
          EOPKG

          mkdir -p archlive/airootfs/etc/calamares/{modules,scripts,branding/archlinux}
          mkdir -p archlive/airootfs/etc/systemd/system/getty@tty1.service.d/
          mkdir -p archlive/airootfs/root

          # install_yay.sh
          cat <<'EOSH' > archlive/airootfs/etc/calamares/scripts/install_yay.sh
          #!/bin/bash
          pacman -S --noconfirm --needed git base-devel
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          sudo -u builder bash -c "cd /home/builder && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg --noconfirm -si"
          userdel -r builder
          sed -i "/builder/d" /etc/sudoers
          EOSH
          chmod +x archlive/airootfs/etc/calamares/scripts/install_yay.sh

          # settings.conf
          cat <<EOFSET > archlive/airootfs/etc/calamares/settings.conf
          modules-load:
            - welcome
            - keyboard
            - partition
            - unpackfs
            - shellprocess
            - netinstall
            - users
            - bootloader
            - displaymanager
            - finished
          branding: archlinux
          prompt-install: false
          -id: preserve-user-home-on-reinstall
          EOFSET

          # unpackfs.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/unpackfs.conf
          ---
          unpack:
            - source: "/run/archiso/bootmnt/arch/x86_64/airootfs.sfs"
              sourcefs: "squashfs"
              destination: ""
          EOF

          # shellprocess.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/shellprocess.conf
          ---
          scripts:
            - script:
                - calamares-chroot-script "/etc/calamares/scripts/install_yay.sh"
              timeout: 600
              comment: "Installing yay AUR helper"
          EOF

          # netinstall.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/netinstall.conf
          ---
          source: "/etc/calamares/netinstall.yaml"
          preScript: "yay -Syu --noconfirm"
          install:
              - "yay -S --noconfirm"
          EOF

          # netinstall.yaml
          cat <<'EOF' > archlive/airootfs/etc/calamares/netinstall.yaml
          packages:
            - name: "üß† Kernels"
              description: "Alternative Linux kernels"
              packages: [linux-lts, linux-zen, linux-hardened]

            - name: "üñ•Ô∏è Desktop Environments"
              exclusive: true
              description: "Choose one full-featured desktop"
              packages:
                - plasma-meta: "KDE Plasma"
                - gnome: "GNOME"
                - xfce4: "XFCE"
                - cinnamon: "Cinnamon"
                - mate: "MATE"
                - budgie-desktop: "Budgie"
                - deepin: "Deepin"
                - lxqt: "LXQt"

            - name: "ü™ü Tiling WMs"
              description: "Tiling window managers"
              packages: [i3-wm, sway, hyprland, bspwm, qtile, awesome, dwm, xmonad]

            - name: "üí° Display Managers"
              packages: [sddm, gdm, lightdm, lxdm]

            - name: "üêö Shells & Terminals"
              packages: [zsh, fish, kitty, alacritty, terminator, wezterm]

            - name: "üìÇ File Managers"
              packages: [dolphin, thunar, nautilus, ranger, mc, krusader]

            - name: "üìà System Tools"
              packages: [htop, btop, conky, gparted, neofetch, fastfetch, powertop, iotop]

            - name: "üîë Privacy & Security"
              packages: [keepassxc, veracrypt, ufw, gufw, firewalld, torbrowser-launcher]

            - name: "üî† Fonts"
              packages: [noto-fonts, ttf-fira-code, ttf-jetbrains-mono, ttf-hack-nerd, ttf-cascadia-code, ttf-dejavu, ttf-liberation]

            - name: "üõ†Ô∏è Dev Tools"
              packages: [base-devel, git, cmake]

            - name: "üë®‚Äçüíª Editors & IDEs"
              packages: [neovim, vim, emacs, code, geany, kate, gedit, qtcreator, sublime-text-4]

            - name: "üì¶ Containers & VMs"
              packages: [docker, docker-compose, podman, qemu-full, virt-manager, virtualbox, virtualbox-guest-iso]

            - name: "üï∏Ô∏è Web Dev"
              packages: [nodejs, npm, deno]

            - name: "üêç Python Dev"
              packages: [python-pip, python-virtualenv, ipython]

            - name: "‚öôÔ∏è Compilers"
              packages: [clang, openjdk-src, go, rustup]

            - name: "üóÉÔ∏è Databases"
              packages: [postgresql, mariadb, redis, dbeaver, sqlitebrowser]

            - name: "üåê Browsers"
              packages:
                - firefox
                - chromium
                - vivaldi: "Vivaldi (AUR)"
                - brave: "Brave (AUR)"

            - name: "‚úçÔ∏è Office Tools"
              packages: [libreoffice-fresh, onlyoffice-desktopeditors, thunderbird, evolution, zotero, joplin-desktop, calibre]

            - name: "üé® Design"
              packages: [gimp, krita, inkscape, blender, darktable, rawtherapee, digikam, scribus, pinta, archlinux-artwork]

            - name: "üé¨ Multimedia"
              packages: [vlc, mpv, celluloid, smplayer, obs-studio, kdenlive, shotcut, audacity, lmms, handbrake, spotify-launcher, strawberry, lollypop]

            - name: "üéÆ Gaming"
              packages: [steam, lutris, heroic-games-launcher-bin, wine, gamemode, mangohud, bottles, retroarch, dolphin-emu, 0ad, supertuxkart, xonotic, hedgewars, extremetuxracer, warsow, classicube]
          EOF

          # displaymanager.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/displaymanager.conf
          ---
          displaymanagers:
            - {name: "SDDM", service: "sddm.service"}
            - {name: "GDM", service: "gdm.service"}
            - {name: "LightDM", service: "lightdm.service"}
          default: "sddm"
          EOF

          # bootloader.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/bootloader.conf
          ---
          bootloader: "grub"
          efi_directory: "/boot"
          grub_install_args: ["--bootloader-id=arch"]
          EOF

          # partition.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/partition.conf
          ---
          efiSystemPartition: "/boot"
          efiSystemPartitionSize: 512M
          create-swap: true
          swap-size: 2048M
          default-filesystem: "ext4"
          EOF

          # finished.conf
          cat <<EOF > archlive/airootfs/etc/calamares/modules/finished.conf
          ---
          reboot-now: true
          EOF

          # branding.desc
          cat <<EOF > archlive/airootfs/etc/calamares/branding/archlinux/branding.desc
          componentName: archlinux
          welcomeText: "<h2>Welcome to the Universal Arch Linux Installer</h2><p>This installer uses <b>yay</b> to support official & AUR packages. Internet required.</p>"
          EOF

          # Autologin + startx + X
          cat <<EOF > archlive/airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf
          [Service]
          ExecStart=
          ExecStart=-/usr/bin/agetty --autologin root --noclear %I \$TERM
          EOF

          cat <<EOF > archlive/airootfs/root/.xinitrc
          #!/bin/sh
          openbox &
          tint2 &
          calamares --fullscreen
          EOF
          chmod +x archlive/airootfs/root/.xinitrc

          cat <<EOF > archlive/airootfs/root/.bash_profile
          [[ -z \$DISPLAY && \$XDG_VTNR -eq 1 ]] && startx
          EOF

          # profile.conf
          cat <<EOF > archlive/profile.conf
          iso_name="archlinux-universal-installer"
          iso_label="ARCH_YAY_$(date +%Y%m)"
          iso_publisher="KrzysTheTech"
          iso_application="Arch Linux Universal Netinstaller"
          iso_version="$(date +%Y.%m.%d)"
          install_dir="arch"
          buildmodes=('iso')
          bootmodes=('bios.syslinux.mbr bios.syslinux.eltorito uefi-shell uefi-ia32.grub.esp uefi-x64.grub.esp')
          airootfs_image_tool_options=('-comp' 'xz' '-b' '1M')
          file_permissions=(["/etc/shadow"]="0:0:400" ["/root"]="0:0:750")
          EOF
          EOF

          chmod +x docker-build.sh

      - name: Run Docker Build Script
        run: |
          docker run --rm --privileged -v "${{ github.workspace }}":/work -w /work archlinux:latest ./docker-build.sh

      - name: Build the ISO
        run: |
          docker run --rm --privileged -v "${{ github.workspace }}":/work -w /work archlinux:latest mkarchiso -v -w work -o out archlive

      - name: Set Timestamp for Artifact Name
        run: echo "TIMESTAMP=$(date +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-universal-installer-${{ env.TIMESTAMP }}-x86_64.iso
          path: out/*.iso