name: Build Debian Sid Installer (amd64-experimental)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360 # 6-hour timeout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "KrzysTheTech"
          git config --global user.email "krzysztofdemirkuzniak@gmail.com"

      - name: Maximize Build Space
        run: |
          echo "Freeing up disk space..."
          sudo rm -rf /usr/share/dotnet /opt/hostedtoolcache/CodeQL /usr/local/lib/android
          echo "Disk space after cleanup:"
          df -h

      - name: Cache build contents
        uses: actions/cache@v4
        with:
          path: cache
          key: ${{ runner.os }}-installer-amd64-exp-${{ hashFiles('config/package-lists/my.list.chroot', 'config/archives/experimental.list.chroot') }}
          restore-keys: |
            ${{ runner.os }}-installer-amd64-exp-

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y live-build debootstrap

      - name: Create Experimental Repo and APT Pinning Config
        run: |
          mkdir -p config/archives config/includes.chroot/etc/apt/preferences.d
          echo "deb http://deb.debian.org/debian/ experimental main" > config/archives/experimental.list.chroot
          cat <<EOF > config/includes.chroot/etc/apt/preferences.d/experimental.pref
          Package: *
          Pin: release a=experimental
          Pin-Priority: 1

          Package: linux-image-amd64 linux-headers-amd64
          Pin: release a=experimental
          Pin-Priority: 1001
          EOF

      - name: Prepare System Customizations
        run: |
          mkdir -p config/includes.chroot/usr/share/backgrounds/custom
          mkdir -p config/includes.chroot/usr/share/glib-2.0/schemas
          mkdir -p config/includes.chroot/etc/skel
          mkdir -p config/hooks/chroot
          wget -O config/includes.chroot/usr/share/backgrounds/custom/mariokartworld-wallpaper.jpg "https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.nintendo.com%2Feu%2Fmedia%2Fimages%2Fassets%2Fnintendo_switch_2_games%2Fmariokartworld%2F2x1_NSwitch2_MarioKartWorld_image1600w.jpg&f=1&ipt=f182cce6fcc98c604ce81f8fb7563d107057922db6dfe730d25bfe8042c89c03"
          cat <<EOF > config/includes.chroot/usr/share/glib-2.0/schemas/99_custom_wallpaper.gschema.override
          [org.gnome.desktop.background]
          picture-uri='file:///usr/share/backgrounds/custom/mariokartworld-wallpaper.jpg'
          picture-uri-dark='file:///usr/share/backgrounds/custom/mariokartworld-wallpaper.jpg'
          EOF
          cat <<EOF > config/hooks/chroot/99-compile-schemas.hook.chroot
          #!/bin/sh
          glib-compile-schemas /usr/share/glib-2.0/schemas/
          EOF
          chmod +x config/hooks/chroot/99-compile-schemas.hook.chroot
          echo "alias apt='nala'" >> config/includes.chroot/etc/skel/.bashrc

      - name: Create Custom Installer Message
        run: |
          mkdir -p config/preseed
          cat <<EOF > config/preseed/custom-warning.cfg
          d-i debian-installer/startup_note string WARNING: This is a highly unstable custom Debian Sid build. It includes software from the main Sid repositories (Firefox 140.0.1-1, VLC 3.0.21-10) and the latest kernel from the Experimental repository (6.15.5-1~exp1). This system is for testing and development purposes only. Use with extreme caution.
          EOF

      - name: Create live-build config
        run: |
          lb config noauto \
            --mode debian \
            --architecture amd64 \
            --distribution sid \
            --archive-areas "main contrib non-free non-free-firmware" \
            --mirror-bootstrap "http://deb.debian.org/debian/" \
            --debian-installer-distribution sid \
            --binary-images iso-hybrid \
            --iso-application "Debian Sid GNOME Installer (Experimental Kernel)" \
            --iso-preparer "Built by GitHub Actions" \
            --iso-publisher "GitHub Actions" \
            --iso-volume "Debian Sid Installer" \
            --memtest none \
            --cache true \
            --debian-installer-kernel-packages "linux-image-amd64"

      - name: Create package list for installed system
        run: |
          mkdir -p config/package-lists
          cat <<EOF > config/package-lists/my.list.chroot
          # This list defines packages that will be on the final INSTALLED system
          linux-image-amd64
          task-gnome-desktop
          nala
          firefox
          vlc
          ffmpeg
          build-essential
          crossbuild-essential-amd64
          kdenlive
          EOF

      - name: Build the ISO
        run: sudo lb build

      - name: Rename ISO
        run: |
          ISO_DATE=$(date +%Y%m%d)
          mv debian-installer-amd64.iso "debian-sid-gnome-installer-${ISO_DATE}-amd64.iso"

      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: debian-sid-gnome-installer-amd64
          path: debian-sid-gnome-installer-*-amd64.iso
